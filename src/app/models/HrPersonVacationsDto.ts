import { HrDocumentRequestDto } from "./HrDocumentRequestDto";
import { HrOrganizationsDto, HrPersonAttachmentsDto, HrPersonIdentityCardDto, HrPersonPassportDetailsDto, HrPersonSalaryElementsDto, HrPersonVisaDetailsDto } from "./HrPersonsDto";
import { FndLookupValuesDto } from "./portalUserDto";
export interface HrPersonVacationsResponsDto {
    result: HrPersonVacationsDto[];
    targetUrl: string;
    success: boolean;
    error: string;
    unAuthorizedRequest: boolean;
    __abp: boolean;
}
export class HrPersonVacationsDto{
    [x: string]: any;
    operationNumber :string;
    vacationBalance : number;
    GetTotalAnuualLeaveDays:number;
    operationDate : string;
    startDate : string;
    endDate :string;
    statusLkpId:number;
    hrVacationsTypeId:number;
    hrPersonId:number;
    hrPersons:HrPersonsDto;
  //  hrAlternativePersonId:number;
    hrPersonsAlternative:HrPersonsDto;
    noOfDays:number;
    hrVacationsTypes:HrVacationsTypesDto;
    notes:string;
    fndStatusLkp:string;
    tenantId:number;
    isFromPortal:boolean;
    portalStatusLkpId :number;
    fndPortalStatusLkp :string;
    attachmentRequired: string;
    id:number;
    attachmentPath:string;
    hrPersonVacations:HrPersonVacationsDto[]=[];
    isOutCountryLeave:string;
    supervisorname:string;
    postUserName:string;
    reason:string;
    showApproveButton:Boolean=false;
    postDate:string;
    supervisorSubmitDate:string;
    postUserId:string;
    supervisorSubmitId:string;
}
export class HrPersonsDto{
    fullName:string;
    phoneNumber:string;
    region:string;
    residencePlace:string;
    employeeNumber:string;
    firstName:string;
    fatherName:string;
    lastName:string;
    placeOfBirth:string;
    emailAddress:string;
    personPhoto:string;
    accountNumber:string;
    hireDate:string;
    birthDate:string;
    probationEndDate:string;
    probationLength:number;
    noOfTickets:number;
    ticketAfterYears:number;
    ticketAmount:number;
    noticeLength:number;
    hrOrganizationsDeptId:number;
    hrOrganizationsDept:HrOrganizationsDto;
    hrOrganizationsBranchId:number;
    hrOrganizationsBranch:HrOrganizationsDto;
    hrPersonSupervisorId:number;
    hrPersonSupervisor:HrPersonsDto;
    pyPayrollTypeId:number;
    genderLkpId  :number; 
    fndGenderLkp:FndLookupValuesDto;   
    personTypeLkpId:number;   
    fndPersonTypeLkp:FndLookupValuesDto;   
    nationalityLkpId:number;   
    fndNationalityLkp:FndLookupValuesDto;   
    maritalStatusLkpId:number;   
    fndMaritalStatusLkp:FndLookupValuesDto;   
    statusLkpId:number;   
    fndStatusLkp:FndLookupValuesDto;   
    jobGradeLkpId:number;   
    fndJobGradeLkp:FndLookupValuesDto;   
    jobLkpId?:number;   
    fndJobLkp:FndLookupValuesDto;   
    personCategoryLkpId?:number;   
    fndPersonCategoryLkp:FndLookupValuesDto;   
    firstTitleLkpId?:number;   
    fndFirstTitleLkp:FndLookupValuesDto;   
    sponserLkpId?:number;   
    fndSponserLkp:FndLookupValuesDto;   
    countryOfBrithLkpId?:number;   
    fndCountryOfBrithLkp:FndLookupValuesDto;   
    probationUnitLkpId?:number;   
    fndProbationUnitLkp:FndLookupValuesDto;   
    destinationCountryLkpId?:number;   
    fndDestinationCountryLkp:FndLookupValuesDto;   
    ticketClassLkpId?:number;   
    fndTicketClassLkp:FndLookupValuesDto;   
    noticeUnitLkpId?:number;   
    fndNoticeUnitLkp:FndLookupValuesDto;   
    paymentTypeLkpId?:number;   
    fndPaymentTypeLkp:FndLookupValuesDto;   
    bankLkpId?:number;   
    fndBankLkp:FndLookupValuesDto;   
    hrPersonVisaDetails:HrPersonVisaDetailsDto[]=[];
    hrPersonPassportDetails:HrPersonPassportDetailsDto[];
    hrPersonIdentityCard:HrPersonIdentityCardDto[];
    hrPersonSalaryElements:HrPersonSalaryElementsDto[];
    hrPersonAttachments:HrPersonAttachmentsDto[]=[];
    hrPersonVacations:HrPersonVacationsDto[]=[];
    id:number;
}
export class HrVacationsTypesDto{
    vacationsTypeNumber:string;
    vacationsTypeName:string;
    vacationsTypeDesc:string;
    maximumDaysPerYear:number;
    maximumDays:number;

}